{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../providers/post-provider.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(router, postPvd, toastController, menuCtrl) {\n      this.router = router;\n      this.postPvd = postPvd;\n      this.toastController = toastController;\n      this.menuCtrl = menuCtrl;\n    }\n\n    ngOnInit() {\n      localStorage.setItem(\"HOMELINK\", 'https://www.asi-ph.com/sandboxes/FieldTracking/RBTApp/');\n    }\n\n    ionViewDidEnter() {\n      this.menuCtrl.enable(false);\n      console.log(localStorage.getItem(\"UTYPE\"));\n      localStorage.setItem(\"HOMELINK\", 'https://www.asi-ph.com/sandboxes/FieldTracking/RBTApp/');\n      var ucode = localStorage.getItem(\"UCODE\");\n      console.log(ucode);\n\n      if (ucode != null || ucode != undefined) {\n        this.router.navigate(['/profile']);\n      }\n    }\n\n    ionViewDidLeave() {\n      this.menuCtrl.enable(true);\n    }\n\n    openForgotPassword() {\n      this.router.navigate(['/forgot-password']);\n    }\n\n    openRegister() {\n      this.router.navigate(['/register']);\n    }\n\n    login(user, pass) {\n      console.log($('#user').val(), $('#pass').val());\n      var count = 0;\n      var ths = [];\n      $(\".required\").each(function () {\n        if ($(this).val() == \"\") {\n          count++;\n          ths.push($(this));\n        }\n      });\n\n      if (count == 0) {\n        return new Promise(resolve => {\n          let body = {\n            action: 'Login',\n            user: user,\n            pass: pass\n          };\n          this.postPvd.postData(body, localStorage.getItem(\"HOMELINK\")).subscribe(data => {\n            if (data['status'] == \"Success\") {\n              // this.openToasts('<center>Welcome!!!</center>');\n              console.log(data['data']);\n              localStorage.setItem(\"UCODE\", data['data']['userCode']);\n              localStorage.setItem(\"UTYPE\", data['data']['categoryName']);\n              localStorage.setItem(\"ROLECODE\", data['data']['roleCategoryCode']);\n              localStorage.setItem(\"NAME\", data['data']['name']);\n              this.router.navigate(['/profile']);\n            } else {\n              this.openToaste('<center>Invalid credentials!</center>');\n            }\n          });\n        });\n      } else {\n        ths[0].focus();\n        ths[0].css({\n          \"border\": '#FF0000 1px solid'\n        });\n        setTimeout(function () {\n          ths[0].removeAttr('style');\n        }, 5000);\n      }\n    }\n\n    openToasts(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: msg,\n          duration: 2000,\n          color: 'success'\n        });\n        toast.present();\n      });\n    }\n\n    openToaste(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: msg,\n          duration: 2000,\n          color: 'danger'\n        });\n        toast.present();\n      });\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostProviderService), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i3.MenuController));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 0,\n    consts: [[1, \"loginbg\"], [1, \"box\"], [\"col-6\", \"\"], [1, \"divimg\"], [\"src\", \"/assets/fieldtracking.png\", 1, \"imgloginlogo\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Username\", 1, \"required\"], [\"user\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"required\"], [\"pass\", \"\"], [\"type\", \"submit\", \"value\", \"Login\"], [1, \"forgotbtn\", 3, \"click\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ion-grid\");\n        i0.ɵɵelementStart(3, \"ion-row\");\n        i0.ɵɵelementStart(4, \"ion-col\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h1\");\n        i0.ɵɵtext(8, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_9_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          const _r1 = i0.ɵɵreference(13);\n\n          return ctx.login(_r0.value, _r1.value);\n        });\n        i0.ɵɵelement(10, \"input\", 6, 7);\n        i0.ɵɵelement(12, \"input\", 8, 9);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-col\", 2);\n        i0.ɵɵelementStart(17, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_17_listener() {\n          return ctx.openRegister();\n        });\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \" | \");\n        i0.ɵɵelementStart(20, \"ion-col\", 2);\n        i0.ɵɵelementStart(21, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_21_listener() {\n          return ctx.openForgotPassword();\n        });\n        i0.ɵɵtext(22, \"Forgot Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i3.IonContent, i3.IonGrid, i3.IonRow, i3.IonCol, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n    styles: [\"@font-face{font-family:Poetsen One;font-style:normal;font-weight:300;font-display:swap;src:url(/assets/fonts/PoetsenOne-Regular.ttf)}.loginbg[_ngcontent-%COMP%]{--background:#fff}ion-col[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{background-color:#191a30;border:1px solid #191a30;border-radius:2px;padding:5px}.box[_ngcontent-%COMP%], ion-col[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{text-align:center}.box[_ngcontent-%COMP%]{width:300px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.box[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#202945;font-weight:500;font-family:Poetsen One;margin-top:0}.box[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%], .box[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{background:none;display:block;margin:20px auto;text-align:center;border:2px solid #202945;padding:14px 10px;width:240px;outline:none;color:#000;border-radius:24px;transition:.25s;font-family:Poetsen One}.box[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus, .box[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{width:260px;border-color:#ffb444}.box[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%]{border:0;background-color:#202945;text-align:center;padding:14px 40px;color:#ffb444;border-radius:24px;text-transform:uppercase;font-family:Poetsen One;margin:0 auto 20px;font-weight:900}.imgloginlogo[_ngcontent-%COMP%]{width:80%;margin:0 auto}.divimg[_ngcontent-%COMP%]{background-color:initial!important;border:none!important;border-radius:2px;padding:5px;text-align:center}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}