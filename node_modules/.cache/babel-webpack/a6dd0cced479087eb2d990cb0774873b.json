{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../providers/post-provider.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\n\nfunction TaskTrackerPage_ion_button_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskTrackerPage_ion_button_35_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.btnappend();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 23);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskTrackerPage_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"ion-row\", 25);\n    i0.ɵɵelementStart(2, \"ion-col\", 26);\n    i0.ɵɵelementStart(3, \"ion-button\", 27);\n    i0.ɵɵelement(4, \"ion-icon\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelement(6, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-col\", 30);\n    i0.ɵɵelementStart(8, \"label\");\n    i0.ɵɵtext(9, \"Service Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"select\", 31);\n    i0.ɵɵelementStart(11, \"label\");\n    i0.ɵɵtext(12, \"Service Subtype: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"select\", 32);\n    i0.ɵɵelementStart(14, \"label\");\n    i0.ɵɵtext(15, \"Comment:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"textarea\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"ion-col\", 19);\n    i0.ɵɵelement(18, \"label\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskTrackerPage_ion_button_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-button\", 35);\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TaskTrackerPage = /*#__PURE__*/(() => {\n  class TaskTrackerPage {\n    constructor(router, postPvd, toastController, menuCtrl, modalController, actionSheetController, alertController, plt) {\n      this.router = router;\n      this.postPvd = postPvd;\n      this.toastController = toastController;\n      this.menuCtrl = menuCtrl;\n      this.modalController = modalController;\n      this.actionSheetController = actionSheetController;\n      this.alertController = alertController;\n      this.plt = plt;\n    }\n\n    ngOnInit() {\n      console.log(this.type, this.code);\n      this.name = localStorage.getItem(\"NAME\");\n      var codex = this.code;\n\n      if (this.type != 'view') {\n        this.getData();\n        $('body').on('change', '.stype', function () {\n          console.log($(this).find(':selected').text());\n          var val = $(this).find(':selected').val();\n          var theclass = $(this).attr('attr');\n          var link1 = localStorage.getItem(\"HOMELINK\");\n          var link = link1.slice(0, -1) + '1/';\n          console.log(link);\n          $.ajax({\n            url: link,\n            type: 'POST',\n            dataType: 'json',\n            data: {\n              code: val,\n              action: 'subtype'\n            },\n            success: function (data) {\n              console.log(data);\n              $('.sub' + theclass).html(data['PTS']);\n            }\n          });\n        });\n        $('body').on('change', '.time', function () {\n          var attr = $(this).attr('attr');\n          console.log(attr, $(this).val());\n          $('.' + attr).html($(this).val());\n          var split = $(this).val().split(':');\n          var test = parseInt(split[0]);\n          var test1 = parseInt(split[1]);\n          var total = Math.abs(test) + '.' + Math.abs(test1);\n          $('.' + attr).html(total);\n          countTotal();\n        });\n\n        function countTotal() {\n          var sum = 0;\n          $('.total').each(function () {\n            var val = $(this).text();\n\n            if (val) {\n              sum += parseInt(val);\n              console.log(val);\n            }\n          });\n          console.log(sum * 0.05);\n          var total = sum * 0.05;\n          $('.finaltotal').html(total.toFixed(2));\n        }\n\n        $('body').on('click', '#save', function () {\n          var req = 0;\n          var ths = [];\n          $('.req').each(function () {\n            if ($(this).val() == '') {\n              req++;\n              ths.push($(this));\n            }\n          });\n\n          if (req == 0) {\n            var link1 = localStorage.getItem(\"HOMELINK\");\n            var link = link1.slice(0, -1) + '1/';\n            var arrProType = [];\n            var arrSubType = [];\n            var arrCmnt = [];\n            var arrDuration = [];\n            var arrtotalX = [];\n            $('.total').each(function () {\n              if ($(this).html() != '') {\n                arrtotalX.push($(this).html());\n              }\n            });\n            $('.stype').each(function () {\n              if ($(this).find(':selected').text() != '') {\n                arrProType.push($(this).find(':selected').text());\n              }\n            });\n            $('.sub').each(function () {\n              if ($(this).find(':selected').text() != '') {\n                arrSubType.push($(this).find(':selected').text());\n              }\n            });\n            $('.comment').each(function () {\n              if ($(this).val() != '') {\n                arrCmnt.push($(this).val());\n              }\n            });\n            $('.time').each(function () {\n              if ($(this).val() != '') {\n                arrDuration.push($(this).val());\n              }\n            }); // console.log(arrDuration)\n\n            $.ajax({\n              url: link,\n              type: 'POST',\n              dataType: 'json',\n              data: {\n                action: 'save',\n                'ucode': localStorage.getItem(\"UCODE\"),\n                'newcode': $('.newcode').val(),\n                'bcba': $('.supervisorcode').val(),\n                'stime': $('.stime').val(),\n                'etime': $('.etime').val(),\n                'date': $('.date').html(),\n                'duration': arrDuration,\n                'protype': arrProType,\n                'prosub': arrSubType,\n                'cmnt': arrCmnt,\n                'totalX': arrtotalX\n              },\n              success: function (data) {\n                // console.log(data)\n                jsopenToasts('Task log create successful!');\n                setTimeout(function () {\n                  console.log('back');\n                  $('#back').click();\n                }, 3000); // $('.sub'+theclass).html(data['PTS']);\n              }\n            });\n          } else {\n            ths[0].focus();\n            ths[0].css('border', '1px solid red');\n            setTimeout(function () {\n              ths[0].removeAttr('style');\n            }, 5000);\n          }\n        });\n\n        function jsopenToasts(msg) {\n          return __awaiter(this, void 0, void 0, function* () {\n            const toast = document.createElement('ion-toast');\n            toast.message = '<center>' + msg + '</center>';\n            toast.duration = 2000;\n            toast.color = 'success';\n            document.body.appendChild(toast);\n            return toast.present();\n          });\n        }\n\n        $('body').on('click', '#remove', function () {\n          var lnt = $('.btnRemove').length;\n          var count = $(this).index('.btnRemove') + 1;\n          $(this).parent().parent().remove(); // if(lnt > 1) {\n          // \t$('#divappend'+count).remove();\n          // }\n\n          console.log(count);\n        });\n      } else if (this.type == 'view') {\n        var link1 = localStorage.getItem(\"HOMELINK\");\n        var link = link1.slice(0, -1) + '1/';\n        $.ajax({\n          url: link,\n          type: 'POST',\n          dataType: 'json',\n          data: {\n            action: 'view',\n            'ucode': localStorage.getItem(\"UCODE\"),\n            'code': codex\n          },\n          success: function (data) {\n            console.log(data);\n            $('#x').html(data.datax);\n            $('.finaltotal').html(data.total);\n            $('.visor').html(data.visor);\n            $('.date').html(data.date);\n          }\n        });\n      }\n    }\n\n    getData() {\n      return new Promise(resolve => {\n        let body = {\n          action: 'rbtgettaskcreate',\n          ucode: localStorage.getItem(\"UCODE\"),\n          type: this.type,\n          code: this.code\n        };\n        this.postPvd.postData(body, localStorage.getItem('HOMELINK')).subscribe(data => {\n          if (data['status'] == 'ok') {\n            this.arrData = data['datax'];\n            this.newcode = this.arrData['newcode'];\n            this.supervisorcode = this.arrData['supervisorcode'];\n            this.stime = this.arrData['stime'];\n            this.etime = this.arrData['etime'];\n            this.visor = data['supervisor'];\n            this.date = data['date'];\n            $('.pt1').append(data['PT']);\n            this.PT = data['PT'];\n            console.log(data);\n          } else {\n            this.openToaste('Error occured!');\n          }\n        });\n      });\n    }\n\n    btnappend() {\n      var count = $('.stype').length;\n      count++;\n      var borderstyle = 'style=\"border: 1px solid\"';\n      var styletime = 'style=\"font-size: 10px;width: 100%;color: black; background-color: white\"';\n      var styleselect = 'style=\"width: 100%; font-size: 12px;color: black; background-color: white\"';\n      var stylecomment = 'style=\"font-size:12px;width: 100%;color: black; background-color: white\"';\n      var label = `style=\"font-family: 'Poetsen One';font-size: 12px;\"`;\n      $('#divappend').append(`\n\t\t\t<ion-row id=\"rowappend\">\n\t\t\t\t<ion-col class=\"datalist\" size=\"4\" ` + borderstyle + `>\n\t\t\t\t\t<ion-button button id=\"remove\" class=\"btnRemove\" color=\"danger\" size=\"small\"><ion-icon name=\"remove-circle-outline\" style=\"color: #fff;\"></ion-icon></ion-button> <br>\n\t\t\t\t\t<input type=\"time\" class=\"time req\" attr=\"total` + count + `\" ` + styletime + `>\n\t\t\t\t</ion-col>\n\t\t\t\t<ion-col class=\"datalist\" size=\"6\" ` + borderstyle + `>\n\t\t\t\t\t<ion-label position=\"stacked\" ` + label + `>Service Type: </ion-label>\n\t\t\t\t\t<select class=\"stype pt` + count + ` req\" attr=\"pt` + count + `\" ` + styleselect + `>` + this.PT + `</select>\n\t\t\t\t\t\n\t\t\t\t\t<ion-label position=\"stacked\" ` + label + `>Service Subtype: </ion-label>\n\t\t\t\t\t<select class=\"subpt` + count + ` req\" ` + styleselect + `></select>\n\n\t\t\t\t\t<ion-label position=\"stacked\" ` + label + `>Comment:</ion-label>\n\t\t\t\t\t<textarea class=\"csscomment comment\" cols=\"30\" rows=\"10\" ` + stylecomment + `></textarea>\n\t\t\t\t</ion-col>\n\t\t\t\t<ion-col class=\"datalist\" size=\"2\" ` + borderstyle + `>\n\t\t\t\t<label class=\"total total` + count + `\" ` + label + `></label>\n\t\t\t\t</ion-col>\n\t\t\t</ion-row>\n\t\t`);\n    }\n\n    openToaste(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: '<center>' + msg + '</center>',\n          duration: 2000,\n          color: 'danger'\n        });\n        toast.present();\n      });\n    }\n\n    backButton() {\n      this.modalController.dismiss({\n        'dismissed': true\n      });\n    }\n\n    doRefresh(event) {\n      setTimeout(() => {\n        this.getData();\n        event.target.complete();\n      }, 2000);\n    }\n\n  }\n\n  TaskTrackerPage.ɵfac = function TaskTrackerPage_Factory(t) {\n    return new (t || TaskTrackerPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostProviderService), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i3.MenuController), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i3.ActionSheetController), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.Platform));\n  };\n\n  TaskTrackerPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskTrackerPage,\n    selectors: [[\"app-task-tracker\"]],\n    inputs: {\n      type: \"type\",\n      code: \"code\"\n    },\n    decls: 50,\n    vars: 10,\n    consts: [[\"slot\", \"start\"], [\"id\", \"back\", 3, \"click\"], [\"name\", \"chevron-back-outline\", 1, \"return\"], [1, \"tblclass\"], [\"size\", \"7\", 1, \"head\"], [\"size\", \"5\", 1, \"head\"], [\"type\", \"hidden\", 1, \"newcode\", 3, \"value\"], [\"type\", \"hidden\", 1, \"supervisorcode\", 3, \"value\"], [\"type\", \"hidden\", 1, \"stime\", 3, \"value\"], [\"type\", \"hidden\", 1, \"etime\", 3, \"value\"], [\"size\", \"5\", 1, \"visor\"], [\"size\", \"5\", 1, \"date\"], [\"size\", \"4\", 1, \"headlist\"], [\"size\", \"small\", \"color\", \"primary\", \"id\", \"btnappend\", 3, \"click\", 4, \"ngIf\"], [\"size\", \"6\", 1, \"headlist\"], [\"size\", \"2\", 1, \"headlist\"], [\"id\", \"divappend\", 4, \"ngIf\"], [\"id\", \"x\"], [\"size\", \"10\", 1, \"headlist\"], [\"size\", \"2\", 1, \"datalist\"], [1, \"finaltotal\"], [\"id\", \"save\", \"color\", \"secondary\", \"size\", \"small\", \"expand\", \"block\", 4, \"ngIf\"], [\"size\", \"small\", \"color\", \"primary\", \"id\", \"btnappend\", 3, \"click\"], [\"name\", \"add-outline\", \"shape\", \"round\", \"fill\", \"outline\"], [\"id\", \"divappend\"], [\"id\", \"rowappend\"], [\"size\", \"4\", 1, \"datalist\"], [\"button\", \"\", \"id\", \"remove\", \"color\", \"danger\", \"size\", \"small\", 1, \"btnRemove\"], [\"name\", \"remove-circle-outline\", 2, \"color\", \"#fff\"], [\"type\", \"time\", \"min\", \"00:00\", \"max\", \"24:00\", \"attr\", \"total1\", 1, \"time\", \"req\"], [\"size\", \"6\", 1, \"datalist\"], [\"attr\", \"pt1\", 1, \"stype\", \"pt1\", \"req\"], [1, \"sub\", \"subpt1\"], [\"cols\", \"30\", \"rows\", \"10\", 1, \"csscomment\", \"comment\"], [1, \"total\", \"total1\"], [\"id\", \"save\", \"color\", \"secondary\", \"size\", \"small\", \"expand\", \"block\"]],\n    template: function TaskTrackerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-buttons\", 0);\n        i0.ɵɵelementStart(3, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function TaskTrackerPage_Template_ion_button_click_3_listener() {\n          return ctx.backButton();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 2);\n        i0.ɵɵelementStart(5, \"ion-label\");\n        i0.ɵɵtext(6, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\");\n        i0.ɵɵelementStart(8, \"ion-list\");\n        i0.ɵɵelementStart(9, \"ion-list-header\");\n        i0.ɵɵelementStart(10, \"ion-label\");\n        i0.ɵɵtext(11, \"RBT Task Log\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-grid\", 3);\n        i0.ɵɵelementStart(13, \"ion-row\");\n        i0.ɵɵelementStart(14, \"ion-col\", 4);\n        i0.ɵɵtext(15, \"Registered Behavior Technician :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-col\", 5);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵelement(19, \"input\", 7);\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-row\");\n        i0.ɵɵelementStart(23, \"ion-col\", 4);\n        i0.ɵɵtext(24, \"Supervisor :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ion-col\", 10);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"ion-row\");\n        i0.ɵɵelementStart(28, \"ion-col\", 4);\n        i0.ɵɵtext(29, \"Date of Supervision :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-col\", 11);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"ion-row\");\n        i0.ɵɵelementStart(33, \"ion-col\", 12);\n        i0.ɵɵtext(34, \"Shift Schedule (Duration) \");\n        i0.ɵɵtemplate(35, TaskTrackerPage_ion_button_35_Template, 2, 0, \"ion-button\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ion-col\", 14);\n        i0.ɵɵtext(37, \"Behavior-Analytic Services Implemented During Shift\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"ion-col\", 15);\n        i0.ɵɵtext(39, \"Total Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, TaskTrackerPage_div_40_Template, 19, 0, \"div\", 16);\n        i0.ɵɵelement(41, \"div\", 17);\n        i0.ɵɵelementStart(42, \"ion-row\");\n        i0.ɵɵelementStart(43, \"ion-col\", 18);\n        i0.ɵɵtext(44, \" Total Amount of BCBA Supervision Required \");\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵtext(46, \" (5% of total hours implementing behavior-analytic services) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"ion-col\", 19);\n        i0.ɵɵelement(48, \"label\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, TaskTrackerPage_ion_button_49_Template, 2, 0, \"ion-button\", 21);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.newcode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.supervisorcode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.stime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.etime);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.visor);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.type == \"create\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.type == \"create\");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.type == \"create\");\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonButton, i3.IonIcon, i3.IonLabel, i3.IonContent, i3.IonList, i3.IonListHeader, i3.IonGrid, i3.IonRow, i3.IonCol, i4.NgIf],\n    styles: [\"ion-content[_ngcontent-%COMP%]{background-color:#fff}ion-list-header[_ngcontent-%COMP%]{color:#202945;font-weight:500;font-family:Poetsen One;font-size:larger;text-align:center;margin-left:-10px!important}ion-button[_ngcontent-%COMP%]{text-transform:none;font-family:Poetsen One}ion-col[_ngcontent-%COMP%], ion-col[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{font-size:12px;text-align:justify}.head[_ngcontent-%COMP%], .headlist[_ngcontent-%COMP%]{text-align:center;font-weight:400;font-size:12px;font-family:Poetsen One}.headlist[_ngcontent-%COMP%]{background-color:#ffb444}.datalist[_ngcontent-%COMP%], .headlist[_ngcontent-%COMP%]{border:.01em solid #000;margin-bottom:-1px}.datalist[_ngcontent-%COMP%]{text-align:center;font-weight:400;font-size:12px;background-color:#fff}ion-label[_ngcontent-%COMP%]   .labelclass[_ngcontent-%COMP%]{font-size:12px!important}select[_ngcontent-%COMP%]{width:100%;font-size:13px}ion-datetime[_ngcontent-%COMP%], ion-select[_ngcontent-%COMP%], ion-textarea[_ngcontent-%COMP%]{border-bottom:1px solid #000!important}.left[_ngcontent-%COMP%]{width:40%}.mid[_ngcontent-%COMP%]{width:60%}.right[_ngcontent-%COMP%]{width:20%}.time[_ngcontent-%COMP%]{font-size:10px;width:100%}.csscomment[_ngcontent-%COMP%]{width:100%;font-size:12px;background-color:#fff;color:#000}option[_ngcontent-%COMP%]{overflow-wrap:break-word;word-wrap:break-word}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{background-color:#fff;color:#000}\"]\n  });\n  return TaskTrackerPage;\n})();","map":null,"metadata":{},"sourceType":"module"}