{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../providers/post-provider.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/forms\";\nexport let ForgotPasswordPage = /*#__PURE__*/(() => {\n  class ForgotPasswordPage {\n    constructor(location, postPvd, router, toastController) {\n      this.location = location;\n      this.postPvd = postPvd;\n      this.router = router;\n      this.toastController = toastController;\n      this.email = '';\n    }\n\n    ngOnInit() {}\n\n    backButton() {\n      this.location.back();\n    }\n\n    checkEmail() {\n      var pattern = /^[\\w\\-\\.\\+]+\\@[a-zA-Z0-9\\.\\-]+\\.[a-zA-z0-9]{2,4}$/;\n\n      if (pattern.test(this.email)) {\n        // return new Promise(resolve => {\n        // \tlet body = {\n        // \t\taction: 'verifyEmail',\n        // \t\temail: this.email\n        // \t}\n        // \tthis.postPvd.postData(body, localStorage.getItem(\"HOMELINK\")).subscribe(data =>{\n        // \t\tif(data['status'] == 'ok'){\n        // \t\t\tthis.openToasts(\"<center>Email is verified. Please click 'Send code' to continue!</center>\");\n        // \t\t\t$(\"#verifyEmail\").hide();\n        // \t\t\t$(\".showverify\").show();\n        // \t\t}\n        // \t\telse\n        // \t\t{\n        // \t\t\tthis.openToaste(\"<center>Email is not registered!</center>\");\n        // \t\t}\n        // \t})\n        // });\n        var link1 = localStorage.getItem(\"HOMELINK\");\n        var link = link1.slice(0, -1) + 'WithEmails/verifyEmail';\n        $.ajax({\n          url: link,\n          type: 'POST',\n          dataType: 'json',\n          data: {\n            action: 'save',\n            email: this.email\n          },\n          success: function (data) {\n            console.log(data);\n\n            if (data['status'] == 'ok') {\n              jsopenToasts(\"<center>Email is verified. Please check the code in your email!</center>\");\n              $(\"#verifyEmail\").hide();\n              $(\".showcode\").show(); // $(\".showverify\").show();\n            } else {\n              jsopenToaste(\"<center>Email is not registered!</center>\");\n            }\n          }\n        });\n      } else {\n        this.openToaste(\"Invalid email pattern!\");\n      }\n\n      function jsopenToasts(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n          const toast = document.createElement('ion-toast');\n          toast.message = '<center>' + msg + '</center>';\n          toast.duration = 2000;\n          toast.color = 'success';\n          document.body.appendChild(toast);\n          return toast.present();\n        });\n      }\n\n      function jsopenToaste(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n          const toast = document.createElement('ion-toast');\n          toast.message = '<center>' + msg + '</center>';\n          toast.duration = 2000;\n          toast.color = 'danger';\n          document.body.appendChild(toast);\n          return toast.present();\n        });\n      }\n    }\n\n    codeCheck() {\n      var datax = $('#codex').val().split('');\n      console.log(datax.length);\n\n      if (datax.length == 5) {\n        var link1 = localStorage.getItem(\"HOMELINK\");\n        var link = link1.slice(0, -1) + 'WithEmails/verifyCode';\n        $.ajax({\n          url: link,\n          type: 'POST',\n          dataType: 'json',\n          data: {\n            code: $('#codex').val(),\n            email: this.email\n          },\n          success: function (data) {\n            console.log(data);\n\n            if (data['status'] == 'ok') {\n              $(\".showcode\").hide();\n              $(\".showverify\").show();\n            } else {\n              jsopenToaste(\"<center>Incorrect code!</center>\");\n            }\n          }\n        });\n      }\n\n      function jsopenToasts(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n          const toast = document.createElement('ion-toast');\n          toast.message = '<center>' + msg + '</center>';\n          toast.duration = 2000;\n          toast.color = 'success';\n          document.body.appendChild(toast);\n          return toast.present();\n        });\n      }\n\n      function jsopenToaste(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n          const toast = document.createElement('ion-toast');\n          toast.message = '<center>' + msg + '</center>';\n          toast.duration = 2000;\n          toast.color = 'danger';\n          document.body.appendChild(toast);\n          return toast.present();\n        });\n      }\n    }\n\n    emailCheck() {\n      var pattern = /^[\\w\\-\\.\\+]+\\@[a-zA-Z0-9\\.\\-]+\\.[a-zA-z0-9]{2,4}$/;\n\n      if (pattern.test(this.email)) {\n        this.openToasts(\"Valid email!\");\n        $(\"#sendEmail\").show();\n      } else {\n        this.openToaste(\"Invalid email!\");\n      }\n    }\n\n    passCheck() {\n      var pass1 = $(\"#password1\").val();\n      var pass2 = $(\"#password2\").val();\n\n      if (pass1 != \"\" && pass2 != \"\") {\n        if (pass1 == pass2) {\n          $(\"#confirmPassword\").show();\n        } else {\n          $(\"#confirmPassword\").hide();\n          this.openToaste(\"Password mismatch!\");\n        }\n      } else {\n        $(\"#confirmPassword\").hide();\n      }\n    }\n\n    confirmPassword() {\n      return new Promise(resolve => {\n        let body = {\n          action: 'updatePassword',\n          email: this.email,\n          password: $(\"#password1\").val()\n        };\n        this.postPvd.postData(body, localStorage.getItem(\"HOMELINK\")).subscribe(data => {\n          if (data['status'] == 'ok') {\n            this.openToasts(\"Password updated successfully!\");\n            this.router.navigateByUrl('/login');\n          } else {\n            this.openToaste(\"Password update failed!\");\n          }\n        });\n      });\n    }\n\n    returnLogin() {\n      this.router.navigate(['/login']);\n    }\n\n    openToasts(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: msg,\n          duration: 2000,\n          color: 'success'\n        });\n        toast.present();\n      });\n    }\n\n    openToaste(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: '<center>' + msg + '</center>',\n          duration: 2000,\n          color: 'danger'\n        });\n        toast.present();\n      });\n    }\n\n    openToast(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: '<center>' + msg + '</center>',\n          duration: 3000\n        });\n        toast.present();\n      });\n    }\n\n  }\n\n  ForgotPasswordPage.ɵfac = function ForgotPasswordPage_Factory(t) {\n    return new (t || ForgotPasswordPage)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.PostProviderService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastController));\n  };\n\n  ForgotPasswordPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordPage,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 25,\n    vars: 1,\n    consts: [[\"slot\", \"start\"], [3, \"click\"], [\"name\", \"chevron-back-outline\", 1, \"return\"], [1, \"box\"], [\"col-6\", \"\"], [1, \"divimg\"], [\"src\", \"/assets/fieldtracking.png\", 1, \"imgloginlogo\"], [1, \"rowtop\"], [\"size\", \"12\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"Email adress\", 1, \"nomargtop\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"codex\", \"type\", \"text\", \"placeholder\", \"Reset Code\", \"maxlength\", \"5\", 1, \"showcode\", 2, \"display\", \"none\", 3, \"keyup\"], [\"id\", \"password1\", \"type\", \"text\", \"placeholder\", \"New Password\", 1, \"password\", \"showverify\", 2, \"display\", \"none\", 3, \"keyup\"], [\"id\", \"password2\", \"type\", \"text\", \"placeholder\", \"Confirm Password\", 1, \"password\", \"showverify\", 2, \"display\", \"none\", 3, \"keyup\"], [\"type\", \"submit\", \"id\", \"verifyEmail\", \"value\", \"Verify Email\", 3, \"click\"], [\"type\", \"submit\", \"id\", \"confirmPassword\", \"value\", \"Update password\", 2, \"display\", \"none\", 3, \"click\"]],\n    template: function ForgotPasswordPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-buttons\", 0);\n        i0.ɵɵelementStart(3, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordPage_Template_ion_button_click_3_listener() {\n          return ctx.backButton();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 2);\n        i0.ɵɵelementStart(5, \"ion-label\");\n        i0.ɵɵtext(6, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\");\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"ion-grid\");\n        i0.ɵɵelementStart(10, \"ion-row\");\n        i0.ɵɵelementStart(11, \"ion-col\", 4);\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelement(13, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"h1\");\n        i0.ɵɵtext(15, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-grid\");\n        i0.ɵɵelementStart(17, \"ion-row\", 7);\n        i0.ɵɵelementStart(18, \"ion-col\", 8);\n        i0.ɵɵelementStart(19, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ForgotPasswordPage_Template_input_ngModelChange_19_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 10);\n        i0.ɵɵlistener(\"keyup\", function ForgotPasswordPage_Template_input_keyup_20_listener() {\n          return ctx.codeCheck();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 11);\n        i0.ɵɵlistener(\"keyup\", function ForgotPasswordPage_Template_input_keyup_21_listener() {\n          return ctx.passCheck();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 12);\n        i0.ɵɵlistener(\"keyup\", function ForgotPasswordPage_Template_input_keyup_22_listener() {\n          return ctx.passCheck();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 13);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordPage_Template_input_click_23_listener() {\n          return ctx.checkEmail();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 14);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordPage_Template_input_click_24_listener() {\n          return ctx.confirmPassword();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n      }\n    },\n    directives: [i4.IonHeader, i4.IonToolbar, i4.IonButtons, i4.IonButton, i4.IonIcon, i4.IonLabel, i4.IonContent, i4.IonGrid, i4.IonRow, i4.IonCol, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\"@font-face{font-family:Poetsen One;font-style:normal;font-weight:300;font-display:swap;src:url(/assets/fonts/PoetsenOne-Regular.ttf)}ion-col[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{background-color:#191a30;border:1px solid #191a30;border-radius:2px;padding:5px}.box[_ngcontent-%COMP%], ion-col[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{text-align:center}.box[_ngcontent-%COMP%]{width:300px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.box[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#202945;font-weight:500;margin-top:0}.box[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .box[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-family:Poetsen One}.box[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background:none;display:block;margin:20px auto;text-align:center;border:2px solid #202945;padding:14px 10px;width:240px;outline:none;color:#000;border-radius:24px;transition:.25s}.box[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus, .box[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{width:260px;border-color:#ffb444}.box[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%]{border:0;background-color:#202945;text-align:center;padding:14px 40px;color:#ffb444;border-radius:24px;text-transform:uppercase;font-family:Poetsen One;margin:0 auto 20px;font-weight:900}.imgloginlogo[_ngcontent-%COMP%]{width:80%;margin:0 auto}.divimg[_ngcontent-%COMP%]{background-color:initial!important;border:none!important;border-radius:2px;padding:5px;text-align:center}.rowtop[_ngcontent-%COMP%]{padding:0 5px}ion-button[_ngcontent-%COMP%]{text-transform:none;font-family:Poetsen One}\"]\n  });\n  return ForgotPasswordPage;\n})();","map":null,"metadata":{},"sourceType":"module"}