{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { BcbaCalendarModalDetailsPage } from '../bcba-calendar-modal-details/bcba-calendar-modal-details.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../providers/post-provider.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction BcbaCalendarModalPage_ion_row_23_ion_col_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 15);\n    i0.ɵɵelement(1, \"ion-checkbox\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"value\", \"\", ctx_r3.time1[i_r2], \" to \", ctx_r3.time2[i_r2], \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.timeData[i_r2]);\n  }\n}\n\nfunction BcbaCalendarModalPage_ion_row_23_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 15);\n    i0.ɵɵelement(1, \"ion-checkbox\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"value\", \"\", ctx_r5.time1[i_r2], \" to \", ctx_r5.time2[i_r2], \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.timeData[i_r2]);\n  }\n}\n\nfunction BcbaCalendarModalPage_ion_row_23_ion_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 18);\n    i0.ɵɵlistener(\"click\", function BcbaCalendarModalPage_ion_row_23_ion_button_7_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.actionSheet(ctx_r9.schedTime[i_r2]);\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BcbaCalendarModalPage_ion_row_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\");\n    i0.ɵɵelementStart(1, \"ion-col\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BcbaCalendarModalPage_ion_row_23_ion_col_3_Template, 2, 3, \"ion-col\", 11);\n    i0.ɵɵtemplate(4, BcbaCalendarModalPage_ion_row_23_ng_template_4_Template, 2, 3, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"ion-col\", 13);\n    i0.ɵɵtemplate(7, BcbaCalendarModalPage_ion_row_23_ion_button_7_Template, 2, 0, \"ion-button\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n\n    const _r4 = i0.ɵɵreference(5);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.time1[i_r2], \" to \", ctx_r0.time2[i_r2], \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.exist[i_r2] == 0)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.schedTime[i_r2] != \"\");\n  }\n}\n\nexport let BcbaCalendarModalPage = /*#__PURE__*/(() => {\n  class BcbaCalendarModalPage {\n    constructor(router, postPvd, toastController, menuCtrl, location, modalController, alertController, plt, actionSheetCTRL) {\n      this.router = router;\n      this.postPvd = postPvd;\n      this.toastController = toastController;\n      this.menuCtrl = menuCtrl;\n      this.location = location;\n      this.modalController = modalController;\n      this.alertController = alertController;\n      this.plt = plt;\n      this.actionSheetCTRL = actionSheetCTRL;\n      this.disabledSaveBCBA = false;\n    }\n\n    ngOnInit() {\n      var explode = this.yrmonth.split(' ');\n      this.thisDay = explode[0] + ' ' + this.day + ' ' + explode[1];\n      this.time1 = ['06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00'];\n      this.time2 = ['06:59', '07:59', '08:59', '09:59', '10:59', '11:59', '12:59', '13:59', '14:59', '15:59', '16:59'];\n      this.getData();\n    }\n\n    backButton() {\n      this.modalController.dismiss({\n        'dismissed': true\n      });\n    }\n\n    getData() {\n      if (this.codesched) {\n        return new Promise(resolve => {\n          let body = {\n            action: 'fetchAvailables',\n            ucode: localStorage.getItem(\"UCODE\"),\n            schedcode: this.codesched,\n            company: this.company,\n            date: this.thisDay\n          };\n          this.postPvd.postData(body, localStorage.getItem('HOMELINK')).subscribe(data => {\n            if (data['status'] == 'ok') {\n              this.timeData = data['existingTime'];\n              this.schedTime = data['arrData'];\n              this.exist = data['exist'];\n              console.log(data);\n            } else {\n              this.openToaste('Error occured!');\n            }\n          });\n        });\n      } else {\n        this.timeData = [false, false, false, false, false, false, false, false, false, false, false];\n        this.schedTime = ['', '', '', '', '', '', '', '', '', '', ''];\n        console.log(this.timeData);\n        return new Promise(resolve => {\n          let body = {\n            action: 'ckExist',\n            ucode: localStorage.getItem(\"UCODE\"),\n            schedcode: this.codesched,\n            company: this.company,\n            date: this.thisDay\n          };\n          this.postPvd.postData(body, localStorage.getItem('HOMELINK')).subscribe(data => {\n            if (data['status'] == 'ok') {\n              this.exist = data['exist'];\n              console.log(data);\n            } else {\n              this.openToaste('Error occured!');\n            }\n          });\n        });\n      }\n    }\n\n    presentAlertConfirm() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          message: 'Are you sure you want to set this as your availability time?',\n          buttons: [{\n            text: 'No',\n            role: 'cancel',\n            cssClass: 'alertConfirm',\n            handler: blah => {// console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'Yes',\n            cssClass: 'alertConfirm',\n            handler: () => {\n              this.save();\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    save() {\n      this.disabledSaveBCBA = true;\n      var time = [];\n      var counter = 0;\n      $('ion-checkbox').each(function () {\n        if ($(this).attr('aria-checked') == 'true') {\n          time.push($(this).val());\n        } else {\n          time.push('');\n          counter++;\n        }\n      });\n\n      if (counter < 11) {\n        if (this.plt.is('ios')) {\n          this.ptname = 'ios';\n        } else if (this.plt.is('android')) {\n          this.ptname = 'android';\n        } else {\n          this.ptname = 'APP';\n        }\n\n        return new Promise(resolve => {\n          let body = {\n            action: 'saveAvailability',\n            ucode: localStorage.getItem(\"UCODE\"),\n            schedcode: this.codesched,\n            company: this.company,\n            timex: JSON.stringify(time),\n            date: this.thisDay,\n            ptname: this.ptname\n          };\n          this.postPvd.postData(body, localStorage.getItem('HOMELINK')).subscribe(data => {\n            if (data['status'] == 'ok') {\n              this.disabledSaveBCBA = false;\n              this.codesched = data['schedcode'];\n              this.openToasts('Time availabilty has been saved.');\n            } else {\n              this.disabledSaveBCBA = false;\n              this.openToaste('Error occured!');\n            }\n          });\n        });\n      } else {\n        this.disabledSaveBCBA = false;\n        this.openToaste('There is no selected available time.');\n      }\n    }\n\n    openToasts(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: '<center>' + msg + '</center>',\n          duration: 2000,\n          color: 'success'\n        });\n        toast.present();\n      });\n    }\n\n    openToaste(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: '<center>' + msg + '</center>',\n          duration: 2000,\n          color: 'danger'\n        });\n        toast.present();\n      });\n    }\n\n    openDetails(val) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: BcbaCalendarModalDetailsPage,\n          componentProps: {\n            codesched: this.codesched,\n            yrmonth: this.yrmonth,\n            day: this.day,\n            time: val\n          }\n        });\n        modal.onDidDismiss().then(data => {// this.optionsFn();\n        });\n        return yield modal.present();\n      });\n    }\n\n    actionSheet(data) {\n      return __awaiter(this, void 0, void 0, function* () {\n        var arr = data.split(',');\n        var btns = []; // console.log(arr)\n\n        for (let i = 0; i < arr.length; i++) {\n          btns.push({\n            'text': arr[i],\n            'cssClass': 'actionSheet',\n            'handler': () => {\n              this.openDetails(arr[i]);\n            }\n          });\n        }\n\n        const actionSheet = yield this.actionSheetCTRL.create({\n          header: 'Schedule requests',\n          cssClass: 'match-item-action-sheet',\n          buttons: btns\n        });\n        yield actionSheet.present();\n        const {\n          role\n        } = yield actionSheet.onDidDismiss();\n      });\n    }\n\n    doRefresh(event) {\n      setTimeout(() => {\n        this.getData();\n        event.target.complete();\n      }, 2000);\n    }\n\n  }\n\n  BcbaCalendarModalPage.ɵfac = function BcbaCalendarModalPage_Factory(t) {\n    return new (t || BcbaCalendarModalPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostProviderService), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i3.MenuController), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(i3.ActionSheetController));\n  };\n\n  BcbaCalendarModalPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BcbaCalendarModalPage,\n    selectors: [[\"app-bcba-calendar-modal\"]],\n    inputs: {\n      codesched: \"codesched\",\n      yrmonth: \"yrmonth\",\n      day: \"day\",\n      headertitle: \"headertitle\",\n      company: \"company\"\n    },\n    decls: 26,\n    vars: 4,\n    consts: [[\"slot\", \"start\"], [3, \"click\"], [\"name\", \"chevron-back-outline\", 1, \"return\"], [1, \"tblclass\"], [\"size\", \"12\", 1, \"head\"], [\"size\", \"5\", 1, \"header-r\"], [\"size\", \"4\", 1, \"header-r\"], [\"size\", \"3\", 1, \"header\"], [4, \"ngFor\", \"ngForOf\"], [\"expand\", \"block\", \"color\", \"secondary\", 3, \"disabled\", \"click\"], [\"size\", \"5\", 1, \"header-r1\"], [\"class\", \"header-r1\", \"size\", \"4\", 4, \"ngIf\", \"ngIfElse\"], [\"existElse\", \"\"], [\"size\", \"3\", 1, \"header1\"], [\"size\", \"small\", 3, \"click\", 4, \"ngIf\"], [\"size\", \"4\", 1, \"header-r1\"], [1, \"ckbox\", 3, \"ngModel\", \"value\"], [\"disabled\", \"true\", 1, \"ckbox\", 3, \"ngModel\", \"value\"], [\"size\", \"small\", 3, \"click\"], [\"name\", \"eye-outline\"]],\n    template: function BcbaCalendarModalPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-buttons\", 0);\n        i0.ɵɵelementStart(3, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function BcbaCalendarModalPage_Template_ion_button_click_3_listener() {\n          return ctx.backButton();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 2);\n        i0.ɵɵelementStart(5, \"ion-label\");\n        i0.ɵɵtext(6, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\");\n        i0.ɵɵelementStart(8, \"ion-list\");\n        i0.ɵɵelementStart(9, \"ion-list-header\");\n        i0.ɵɵelementStart(10, \"ion-label\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-grid\", 3);\n        i0.ɵɵelementStart(13, \"ion-row\");\n        i0.ɵɵelementStart(14, \"ion-col\", 4);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-row\");\n        i0.ɵɵelementStart(17, \"ion-col\", 5);\n        i0.ɵɵtext(18, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-col\", 6);\n        i0.ɵɵtext(20, \"Availability\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-col\", 7);\n        i0.ɵɵtext(22, \"Action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, BcbaCalendarModalPage_ion_row_23_Template, 8, 5, \"ion-row\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function BcbaCalendarModalPage_Template_ion_button_click_24_listener() {\n          return ctx.presentAlertConfirm();\n        });\n        i0.ɵɵtext(25, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.headertitle);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.thisDay);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.timeData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.disabledSaveBCBA);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonButton, i3.IonIcon, i3.IonLabel, i3.IonContent, i3.IonList, i3.IonListHeader, i3.IonGrid, i3.IonRow, i3.IonCol, i4.NgForOf, i4.NgIf, i3.IonCheckbox, i3.BooleanValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\"ion-list-header[_ngcontent-%COMP%]{color:#202945;font-weight:500;font-family:Poetsen One;font-size:larger;text-align:center;margin-left:-10px!important}ion-button[_ngcontent-%COMP%]{text-transform:none;font-family:Poetsen One}.head[_ngcontent-%COMP%]{font-weight:700}.head[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]{text-align:center;font-family:Poetsen One}.header[_ngcontent-%COMP%], .header-r[_ngcontent-%COMP%]{border:1px solid #000;font-size:12px;background-color:#ffb444}.header-r[_ngcontent-%COMP%]{border-right:0!important;text-align:center;font-family:Poetsen One}.header1[_ngcontent-%COMP%], .header-r1[_ngcontent-%COMP%]{border:1px solid #000;border-top:0!important;font-size:12px;text-align:center}.header-r1[_ngcontent-%COMP%]{border-right:0!important}\"]\n  });\n  return BcbaCalendarModalPage;\n})();","map":null,"metadata":{},"sourceType":"module"}